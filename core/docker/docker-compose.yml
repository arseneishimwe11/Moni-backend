version: '3.8'

services:
  api-gateway:
    build:
      context: ../..
      dockerfile: core/docker/gateway.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgres
      - redis
      - rabbitmq

  auth-service:
    build:
      context: ../..
      dockerfile: core/docker/auth-service.Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis

  notification-service:
    build:
      context: ../..
      dockerfile: core/docker/notification-service.Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: moni
      POSTGRES_USER: moniuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  postgres_data:
  redis_data:
